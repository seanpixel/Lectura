{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promiseTrackerHoc = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _trackPromise = require(\"./trackPromise\");\nvar _setupConfig = require(\"./setupConfig\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n// Props:\n// config: {\n//  area:  // can be null|undefined|'' (will default to DefaultArea) or area name\n//  delay: // Wait Xms to display the spinner (fast connections scenario avoid blinking)\n//            default value 0ms\n// }\nvar promiseTrackerHoc = function promiseTrackerHoc(ComponentToWrap) {\n  return /*#__PURE__*/function (_Component) {\n    _inherits(promiseTrackerComponent, _Component);\n    var _super = _createSuper(promiseTrackerComponent);\n    function promiseTrackerComponent(props) {\n      var _this;\n      _classCallCheck(this, promiseTrackerComponent);\n      _this = _super.call(this, props);\n      _this.state = {\n        promiseInProgress: false,\n        internalPromiseInProgress: false,\n        config: (0, _setupConfig.setupConfig)(props.config)\n      };\n      _this.notifyPromiseInProgress = _this.notifyPromiseInProgress.bind(_assertThisInitialized(_this));\n      _this.updateProgress = _this.updateProgress.bind(_assertThisInitialized(_this));\n      _this.subscribeToCounterUpdate = _this.subscribeToCounterUpdate.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n    _createClass(promiseTrackerComponent, [{\n      key: \"notifyPromiseInProgress\",\n      value: function notifyPromiseInProgress() {\n        var _this2 = this;\n        this.state.config.delay === 0 ? this.setState({\n          promiseInProgress: true\n        }) : setTimeout(function () {\n          var progress = Boolean((0, _trackPromise.getCounter)(_this2.state.config.area) > 0);\n          _this2.setState({\n            promiseInProgress: progress\n          });\n        }, this.state.config.delay);\n      }\n    }, {\n      key: \"updateProgress\",\n      value: function updateProgress(progress, afterUpdateCallback) {\n        this.setState({\n          internalPromiseInProgress: progress\n        }, afterUpdateCallback);\n        !progress ? this.setState({\n          promiseInProgress: false\n        }) : this.notifyPromiseInProgress();\n      }\n    }, {\n      key: \"subscribeToCounterUpdate\",\n      value: function subscribeToCounterUpdate() {\n        var _this3 = this;\n        _trackPromise.emitter.on(_trackPromise.promiseCounterUpdateEventId, function (anyPromiseInProgress, area) {\n          if (_this3.state.config.area === area) {\n            _this3.updateProgress(anyPromiseInProgress);\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateProgress(Boolean((0, _trackPromise.getCounter)(this.state.config.area) > 0), this.subscribeToCounterUpdate);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _trackPromise.emitter.off(_trackPromise.promiseCounterUpdateEventId);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(ComponentToWrap, _extends({}, this.props, {\n          config: this.state.config,\n          promiseInProgress: this.state.promiseInProgress\n        }));\n      }\n    }]);\n    return promiseTrackerComponent;\n  }(_react.Component);\n};\nexports.promiseTrackerHoc = promiseTrackerHoc;","map":null,"metadata":{},"sourceType":"script"}